server:
  servlet:
    context-path: /api

spring:
  application:
    name: representative-service
  config:
    import: optional:configtree:/run/secrets/
  jackson:
    property-naming-strategy: SNAKE_CASE
  datasource:
    password: ${db_password}
    username:
    url:

  kafka:
    bootstrap-servers:
    custom:
      consumer:
        representative-user:
          groupId: representative-user-group
          topic: representative-user
        flightseat-reservation:
          groupId: flightseat-reservation-group
          topic: flightseat-reservation
      producer:
        representative-topic: representative
      retry-topic-prefix: retry-
      retry-groupId-prefix: retry-
      dlq-topic-prefix: dlq-
      fatal-exceptions:
        - org.aviatrip.representativeservice.exception.FatalKafkaException
        - org.springframework.kafka.support.serializer.DeserializationException
        - org.springframework.messaging.handler.annotation.support.MethodArgumentNotValidException
        - jakarta.validation.ConstraintViolationException

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update

    properties:
      hibernate:
        connection:
          autocommit: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

eureka:
  client:
    service-url:
      defaultZone:

logging:
  level:
    org.apache.kafka: ERROR

springdoc:
  api-docs:
    path: /api-docs

custom:
  default-page-size: 5